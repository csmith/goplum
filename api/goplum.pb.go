// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: goplum.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Status int32

const (
	Status_INDETERMINATE Status = 0
	Status_GOOD          Status = 1
	Status_FAILING       Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "INDETERMINATE",
		1: "GOOD",
		2: "FAILING",
	}
	Status_value = map[string]int32{
		"INDETERMINATE": 0,
		"GOOD":          1,
		"FAILING":       2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_goplum_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_goplum_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_goplum_proto_rawDescGZIP(), []int{0}
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Check  string `protobuf:"bytes,1,opt,name=check,proto3" json:"check,omitempty"`
	Time   int64  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Result Status `protobuf:"varint,3,opt,name=result,proto3,enum=api.Status" json:"result,omitempty"`
	Detail string `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goplum_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_goplum_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_goplum_proto_rawDescGZIP(), []int{0}
}

func (x *Result) GetCheck() string {
	if x != nil {
		return x.Check
	}
	return ""
}

func (x *Result) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Result) GetResult() Status {
	if x != nil {
		return x.Result
	}
	return Status_INDETERMINATE
}

func (x *Result) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goplum_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_goplum_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_goplum_proto_rawDescGZIP(), []int{1}
}

var File_goplum_proto protoreflect.FileDescriptor

var file_goplum_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x67, 0x6f, 0x70, 0x6c, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x61, 0x70, 0x69, 0x22, 0x6f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2a, 0x32, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x44, 0x45, 0x54,
	0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x4f,
	0x4f, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x32, 0x2e, 0x0a, 0x06, 0x47, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x07, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x30,
	0x01, 0x42, 0x1e, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x73, 0x6d, 0x69, 0x74, 0x68, 0x2f, 0x67, 0x6f, 0x70, 0x6c, 0x75, 0x6d, 0x2f, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goplum_proto_rawDescOnce sync.Once
	file_goplum_proto_rawDescData = file_goplum_proto_rawDesc
)

func file_goplum_proto_rawDescGZIP() []byte {
	file_goplum_proto_rawDescOnce.Do(func() {
		file_goplum_proto_rawDescData = protoimpl.X.CompressGZIP(file_goplum_proto_rawDescData)
	})
	return file_goplum_proto_rawDescData
}

var file_goplum_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_goplum_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_goplum_proto_goTypes = []interface{}{
	(Status)(0),    // 0: api.Status
	(*Result)(nil), // 1: api.Result
	(*Empty)(nil),  // 2: api.Empty
}
var file_goplum_proto_depIdxs = []int32{
	0, // 0: api.Result.result:type_name -> api.Status
	2, // 1: api.GoPlum.Results:input_type -> api.Empty
	1, // 2: api.GoPlum.Results:output_type -> api.Result
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_goplum_proto_init() }
func file_goplum_proto_init() {
	if File_goplum_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goplum_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goplum_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goplum_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goplum_proto_goTypes,
		DependencyIndexes: file_goplum_proto_depIdxs,
		EnumInfos:         file_goplum_proto_enumTypes,
		MessageInfos:      file_goplum_proto_msgTypes,
	}.Build()
	File_goplum_proto = out.File
	file_goplum_proto_rawDesc = nil
	file_goplum_proto_goTypes = nil
	file_goplum_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GoPlumClient is the client API for GoPlum service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoPlumClient interface {
	Results(ctx context.Context, in *Empty, opts ...grpc.CallOption) (GoPlum_ResultsClient, error)
}

type goPlumClient struct {
	cc grpc.ClientConnInterface
}

func NewGoPlumClient(cc grpc.ClientConnInterface) GoPlumClient {
	return &goPlumClient{cc}
}

func (c *goPlumClient) Results(ctx context.Context, in *Empty, opts ...grpc.CallOption) (GoPlum_ResultsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GoPlum_serviceDesc.Streams[0], "/api.GoPlum/Results", opts...)
	if err != nil {
		return nil, err
	}
	x := &goPlumResultsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GoPlum_ResultsClient interface {
	Recv() (*Result, error)
	grpc.ClientStream
}

type goPlumResultsClient struct {
	grpc.ClientStream
}

func (x *goPlumResultsClient) Recv() (*Result, error) {
	m := new(Result)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GoPlumServer is the server API for GoPlum service.
type GoPlumServer interface {
	Results(*Empty, GoPlum_ResultsServer) error
}

// UnimplementedGoPlumServer can be embedded to have forward compatible implementations.
type UnimplementedGoPlumServer struct {
}

func (*UnimplementedGoPlumServer) Results(*Empty, GoPlum_ResultsServer) error {
	return status.Errorf(codes.Unimplemented, "method Results not implemented")
}

func RegisterGoPlumServer(s *grpc.Server, srv GoPlumServer) {
	s.RegisterService(&_GoPlum_serviceDesc, srv)
}

func _GoPlum_Results_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GoPlumServer).Results(m, &goPlumResultsServer{stream})
}

type GoPlum_ResultsServer interface {
	Send(*Result) error
	grpc.ServerStream
}

type goPlumResultsServer struct {
	grpc.ServerStream
}

func (x *goPlumResultsServer) Send(m *Result) error {
	return x.ServerStream.SendMsg(m)
}

var _GoPlum_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.GoPlum",
	HandlerType: (*GoPlumServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Results",
			Handler:       _GoPlum_Results_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "goplum.proto",
}
